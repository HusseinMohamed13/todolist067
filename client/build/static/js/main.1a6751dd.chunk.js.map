{"version":3,"sources":["App.js","Login.js","index.js"],"names":["setFlag","setListName","listName","flag","userid","a","url","fetch","method","setText","itemName","setUserId","itemId","itemDone","App","id","useParams","React","useState","data","setData","text","useEffect","then","res","json","handleChange","input","currentTarget","value","runCallback","cb","className","TextField","variant","size","style","width","marginLeft","onChange","required","placeholder","Button","height","marginRight","color","onClick","addList","type","row","list","push","Paper","elevation","addItem","x","Checkbox","checked","done","markItemDone","name","deleteItem","Login","email","setEmail","password","setPassword","navigate","useNavigate","goToHomePage","_id","toast","configure","handleLogin","loginUser","registerUser","routing","exact","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1a6751dd.chunk.js","sourcesContent":["\nimport React from \"react\";\nimport { Paper, TextField } from \"@material-ui/core\";\nimport { Checkbox, Button } from \"@material-ui/core\";\nimport { useLocation,useNavigate,useParams  } from 'react-router-dom';\nimport \"./App.css\";\n\nfunction App() {\n  let { id } = useParams();\n  const [data, setData] = React.useState(null);\n  const [listName, setListName] = React.useState(null);\n  const [text, setText] = React.useState(null);\n  const [flag, setFlag] = React.useState(false);\n  const [userid, setUserId] = React.useState(id);\n\n\n  React.useEffect(() => {\n    fetch(\"https://todolist067.herokuapp.com/api/lists\"+\"?id=\"+userid)\n      .then((res) => res.json())\n      .then((data) => setData(data));\n  }, [flag]);\n\n  const handleChange = ({ currentTarget: input }) => {\n    setText(input.value);\n  };\n\n  const handleChange1 = ({ currentTarget: input }) => {\n    setListName(input.value);\n  };\n\n\n  const runCallback = (cb) => {\n    return cb();\n  };\n\n\n  return (\n    <div className=\"App flex\">\n      <TextField\n        variant=\"outlined\"\n        size=\"small\"\n        style={{ width: \"75%\", marginLeft: \"5px\" }}\n        id=\"newList\"\n        value={listName}\n        onChange={handleChange1}\n        required={true}\n        placeholder=\"Add New TO-DO List\"\n      />\n      <Button\n        style={{ height: \"40px\", marginRight: \"5px\" }}\n        color=\"primary\"\n        onClick={() => addList(setFlag, setListName, listName, flag,userid)}\n        variant=\"outlined\"\n        type=\"submit\"\n      >\n        Add List  \n      </Button>\n      {\n        runCallback(() => {\n          const row = [];\n          for (const list in data) {\n            row.push(\n              <Paper elevation={3} className=\"container\">\n                <div className=\"heading\">{list}</div>\n                  <TextField\n                    variant=\"outlined\"\n                    size=\"small\"\n                    style={{ width: \"65%\" }}\n                    id=\"newItem\"\n                    onChange={handleChange}\n                    required={true}\n                    placeholder=\"Add New TO-DO\"\n                  />\n                  <Button\n                    style={{ height: \"40px\" }}\n                    color=\"primary\"\n                    variant=\"outlined\"\n                    onClick={() => addItem(setFlag, setText, text, list, flag,userid)}\n                    type=\"submit\"\n                  >\n                    Add task\n                  </Button>\n                <div>\n                  {\n                    runCallback(() => {\n                      const row = [];\n                      for (const x in data[list]) {\n                        row.push(\n                          <Paper\n                            key={x}\n                            className=\"flex task_container\"\n                          >\n                            <Checkbox\n                              checked={data[list][x].done}\n                              onClick={() => markItemDone(setFlag,setUserId ,x, data[list][x].name, data[list][x].done, list, flag,userid)}\n                              color=\"primary\"\n                            />\n                            <div\n                              className={\n                                data[list][x].done\n                                  ? \"task line_through\"\n                                  : \"task\"\n                              }\n                            >\n                              {data[list][x].name}\n                            </div>\n                            <Button\n                              onClick={() => deleteItem(setFlag,setUserId ,x, list, flag,userid)}\n                              color=\"secondary\"\n                            >\n                              delete\n                            </Button>\n                          </Paper>\n                        )\n                      }\n                      return row\n                    })\n                  }\n                </div>\n              </Paper>\n            )\n          }\n          return row\n        })\n      }\n    </div>\n  );\n\n}\n\nasync function addList(setFlag, setListName, listName, flag,userid) {\n  const url = 'https://todolist067.herokuapp.com/api/lists' + '?list=' + listName + '&userid=' + userid;\n  await fetch(url, {\n    method: 'POST'\n  });\n\n  setFlag(!flag)\n  setListName(\"\")\n}\n\n\nasync function addItem(setFlag, setText, itemName, listName, flag,userid) {\n  const url = 'https://todolist067.herokuapp.com/api/tasks' + '?list=' + listName + '&itemname=' + itemName;\n  await fetch(url, {\n    method: 'POST'\n  });\n\n  setFlag(!flag)\n  setText(\"\")\n \n}\n\nasync function deleteItem(setFlag, setUserId, itemId, listName, flag,userid) {\n  const url = 'https://todolist067.herokuapp.com/api/tasks' + '?list=' + listName + '&itemid=' + itemId;\n  await fetch(url, {\n    method: 'DELETE'\n  })\n\n  setUserId(userid)\n  setFlag(!flag)\n\n}\n\nasync function markItemDone(setFlag,setUserId, itemId, itemName, itemDone, listName, flag,userid) {\n  const url = 'https://todolist067.herokuapp.com/api/tasks' + '?list=' + listName + '&itemid=' + itemId + '&itemname=' + itemName + '&itemdone=' + itemDone;\n  await fetch(url, {\n    method: 'PUT'\n  })\n\n  setUserId(userid)\n  setFlag(!flag)\n\n}\nexport default App;","import React, { useState } from \"react\";\r\nimport { Paper, TextField } from \"@material-ui/core\";\r\nimport { Checkbox, Button } from \"@material-ui/core\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport App from \"./App\";\r\nimport \"./Login.css\";\r\n\r\nfunction Login() {\r\n    const [email, setEmail] = React.useState(\"\");\r\n    const [password, setPassword] = React.useState(\"\");\r\n\r\n\r\n    const navigate = useNavigate();\r\n    const goToHomePage = (_id) => navigate('/App/' + _id/*{state: {id: _id}}*/);\r\n\r\n    toast.configure()\r\n    \r\n    function validateForm() {\r\n        return email.length > 0 && password.length > 0;\r\n    }\r\n\r\n    const handleChange = ({ currentTarget: input }) => {\r\n        setEmail(input.value);\r\n    };\r\n\r\n    const handleChange1 = ({ currentTarget: input }) => {\r\n        setPassword(input.value);\r\n    };\r\n\r\n    return (\r\n        <div className=\"Login\">\r\n            Email:\r\n            <br />\r\n            <TextField\r\n                variant=\"outlined\"\r\n                margin-left=\"10px\"\r\n                size=\"small\"\r\n                style={{ width: \"25%\" }}\r\n                id=\"email\"\r\n                onChange={handleChange}\r\n                required={true}\r\n            />\r\n            <br />\r\n            <br />\r\n            Password:\r\n            <br />\r\n            <TextField\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                style={{ width: \"25%\" }}\r\n                id=\"password\"\r\n                onChange={handleChange1}\r\n                required={true}\r\n            />\r\n            <br />\r\n            <br />\r\n            <Button\r\n                style={{ height: \"40px\" }}\r\n                color=\"primary\"\r\n                onClick={() => loginUser(email, password, goToHomePage, toast)}\r\n                variant=\"outlined\"\r\n                type=\"submit\"\r\n            >\r\n                Login\r\n            </Button>\r\n            or\r\n            <Button\r\n                style={{ height: \"40px\" }}\r\n                color=\"primary\"\r\n                onClick={() => registerUser(email, password, toast)}\r\n                variant=\"outlined\"\r\n                type=\"submit\"\r\n            >\r\n                Register\r\n            </Button>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nfunction loginUser(email, password, goToHomePage, toast) {\r\n    const url = 'https://todolist067.herokuapp.com/api/login' + '?email=' + email + \"&password=\" + password;\r\n    fetch(url, {\r\n        method: 'POST'\r\n    }).then((res) => res.json())\r\n        .then((data) => handleLogin(data,goToHomePage,toast));\r\n}\r\n\r\nfunction registerUser(email, password, toast) {\r\n    const url = 'https://todolist067.herokuapp.com/api/register' + '?email=' + email + \"&password=\" + password;\r\n    fetch(url, {\r\n        method: 'POST'\r\n    }).then((res) => res.json())\r\n        .then((data) => toast(data));\r\n}\r\n\r\nfunction handleLogin(res,goToHomePage,toast){\r\n    if(res==false){\r\n        toast(\"wrong email or password\")\r\n    }else{\r\n        goToHomePage(res)\r\n    }\r\n}\r\n\r\nexport default Login;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter, Routes, Route, Link } from 'react-router-dom'\nimport App from './App';\nimport Login from './Login';\n\nconst routing = (\n  <BrowserRouter>\n      <Routes>\n        <Route exact path=\"/\" element={<Login/>} />\n        <Route path=\"/App/:id\" element={<App/>} />\n      </Routes>\n  </BrowserRouter>\n)\n\nReactDOM.render(routing, document.getElementById('root'));"],"sourceRoot":""}